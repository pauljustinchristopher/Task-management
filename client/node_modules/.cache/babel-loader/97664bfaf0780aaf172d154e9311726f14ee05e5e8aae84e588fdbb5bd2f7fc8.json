{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulj\\\\Desktop\\\\SIWES\\\\defence project\\\\client\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { toast } from 'react-hot-toast';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  var _socket$current;\n  const socket = useRef(null);\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      // Initialize socket connection\n      socket.current = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          token: localStorage.getItem('token')\n        },\n        transports: ['websocket']\n      });\n\n      // Join user's personal room\n      socket.current.emit('join-user', user._id);\n\n      // Connection event handlers\n      socket.current.on('connect', () => {\n        console.log('Connected to server');\n      });\n      socket.current.on('disconnect', () => {\n        console.log('Disconnected from server');\n      });\n      socket.current.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n      });\n\n      // Real-time event handlers\n      socket.current.on('task-updated', data => {\n        toast.success(`Task \"${data.task.title}\" was updated by ${data.updatedBy}`);\n      });\n      socket.current.on('project-updated', data => {\n        toast.success(`Project \"${data.project.title}\" was updated by ${data.updatedBy}`);\n      });\n      socket.current.on('task-assigned', data => {\n        if (data.assignedTo === user._id) {\n          toast.success(`You were assigned to task \"${data.task.title}\"`);\n        }\n      });\n      socket.current.on('new-comment', data => {\n        if (data.task.assignedTo === user._id || data.project.owner === user._id) {\n          toast.info(`New comment on \"${data.task.title}\" by ${data.user.name}`);\n        }\n      });\n      socket.current.on('member-added', data => {\n        if (data.member._id === user._id) {\n          toast.success(`You were added to project \"${data.project.title}\"`);\n        } else {\n          toast.info(`${data.member.name} joined the project`);\n        }\n      });\n      socket.current.on('member-removed', data => {\n        if (data.userId === user._id) {\n          toast.warning('You were removed from a project');\n        }\n      });\n      socket.current.on('notification', data => {\n        toast(data.message, {\n          icon: data.type === 'success' ? '✅' : data.type === 'warning' ? '⚠️' : 'ℹ️'\n        });\n      });\n      return () => {\n        if (socket.current) {\n          socket.current.disconnect();\n          socket.current = null;\n        }\n      };\n    }\n  }, [isAuthenticated, user]);\n\n  // Socket utility functions\n  const joinProjectRoom = projectId => {\n    if (socket.current) {\n      socket.current.emit('join-project', projectId);\n    }\n  };\n  const leaveProjectRoom = projectId => {\n    if (socket.current) {\n      socket.current.emit('leave-project', projectId);\n    }\n  };\n  const emitTaskUpdate = taskData => {\n    if (socket.current) {\n      socket.current.emit('task-updated', taskData);\n    }\n  };\n  const emitProjectUpdate = projectData => {\n    if (socket.current) {\n      socket.current.emit('project-updated', projectData);\n    }\n  };\n  const emitNewComment = commentData => {\n    if (socket.current) {\n      socket.current.emit('new-comment', commentData);\n    }\n  };\n  const on = (event, callback) => {\n    if (socket.current) {\n      socket.current.on(event, callback);\n    }\n  };\n  const off = (event, callback) => {\n    if (socket.current) {\n      socket.current.off(event, callback);\n    }\n  };\n  const emit = (event, data) => {\n    if (socket.current) {\n      socket.current.emit(event, data);\n    }\n  };\n  const value = {\n    socket: socket.current,\n    joinProjectRoom,\n    leaveProjectRoom,\n    emitTaskUpdate,\n    emitProjectUpdate,\n    emitNewComment,\n    on,\n    off,\n    emit,\n    isConnected: ((_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.connected) || false\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use socket context\n_s(SocketProvider, \"lS/qvXHqLqdmOf1sXRGa/6Krb9c=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","_socket$current","socket","user","isAuthenticated","current","process","env","REACT_APP_SOCKET_URL","auth","token","localStorage","getItem","transports","emit","_id","on","console","log","error","data","success","task","title","updatedBy","project","assignedTo","owner","info","name","member","userId","warning","message","icon","type","disconnect","joinProjectRoom","projectId","leaveProjectRoom","emitTaskUpdate","taskData","emitProjectUpdate","projectData","emitNewComment","commentData","event","callback","off","value","isConnected","connected","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/paulj/Desktop/SIWES/defence project/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Create context\r\nconst SocketContext = createContext();\r\n\r\n// Provider component\r\nexport const SocketProvider = ({ children }) => {\r\n  const socket = useRef(null);\r\n  const { user, isAuthenticated } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      // Initialize socket connection\r\n      socket.current = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        auth: {\r\n          token: localStorage.getItem('token'),\r\n        },\r\n        transports: ['websocket'],\r\n      });\r\n\r\n      // Join user's personal room\r\n      socket.current.emit('join-user', user._id);\r\n\r\n      // Connection event handlers\r\n      socket.current.on('connect', () => {\r\n        console.log('Connected to server');\r\n      });\r\n\r\n      socket.current.on('disconnect', () => {\r\n        console.log('Disconnected from server');\r\n      });\r\n\r\n      socket.current.on('connect_error', (error) => {\r\n        console.error('Socket connection error:', error);\r\n      });\r\n\r\n      // Real-time event handlers\r\n      socket.current.on('task-updated', (data) => {\r\n        toast.success(`Task \"${data.task.title}\" was updated by ${data.updatedBy}`);\r\n      });\r\n\r\n      socket.current.on('project-updated', (data) => {\r\n        toast.success(`Project \"${data.project.title}\" was updated by ${data.updatedBy}`);\r\n      });\r\n\r\n      socket.current.on('task-assigned', (data) => {\r\n        if (data.assignedTo === user._id) {\r\n          toast.success(`You were assigned to task \"${data.task.title}\"`);\r\n        }\r\n      });\r\n\r\n      socket.current.on('new-comment', (data) => {\r\n        if (data.task.assignedTo === user._id || data.project.owner === user._id) {\r\n          toast.info(`New comment on \"${data.task.title}\" by ${data.user.name}`);\r\n        }\r\n      });\r\n\r\n      socket.current.on('member-added', (data) => {\r\n        if (data.member._id === user._id) {\r\n          toast.success(`You were added to project \"${data.project.title}\"`);\r\n        } else {\r\n          toast.info(`${data.member.name} joined the project`);\r\n        }\r\n      });\r\n\r\n      socket.current.on('member-removed', (data) => {\r\n        if (data.userId === user._id) {\r\n          toast.warning('You were removed from a project');\r\n        }\r\n      });\r\n\r\n      socket.current.on('notification', (data) => {\r\n        toast(data.message, {\r\n          icon: data.type === 'success' ? '✅' : data.type === 'warning' ? '⚠️' : 'ℹ️',\r\n        });\r\n      });\r\n\r\n      return () => {\r\n        if (socket.current) {\r\n          socket.current.disconnect();\r\n          socket.current = null;\r\n        }\r\n      };\r\n    }\r\n  }, [isAuthenticated, user]);\r\n\r\n  // Socket utility functions\r\n  const joinProjectRoom = (projectId) => {\r\n    if (socket.current) {\r\n      socket.current.emit('join-project', projectId);\r\n    }\r\n  };\r\n\r\n  const leaveProjectRoom = (projectId) => {\r\n    if (socket.current) {\r\n      socket.current.emit('leave-project', projectId);\r\n    }\r\n  };\r\n\r\n  const emitTaskUpdate = (taskData) => {\r\n    if (socket.current) {\r\n      socket.current.emit('task-updated', taskData);\r\n    }\r\n  };\r\n\r\n  const emitProjectUpdate = (projectData) => {\r\n    if (socket.current) {\r\n      socket.current.emit('project-updated', projectData);\r\n    }\r\n  };\r\n\r\n  const emitNewComment = (commentData) => {\r\n    if (socket.current) {\r\n      socket.current.emit('new-comment', commentData);\r\n    }\r\n  };\r\n\r\n  const on = (event, callback) => {\r\n    if (socket.current) {\r\n      socket.current.on(event, callback);\r\n    }\r\n  };\r\n\r\n  const off = (event, callback) => {\r\n    if (socket.current) {\r\n      socket.current.off(event, callback);\r\n    }\r\n  };\r\n\r\n  const emit = (event, data) => {\r\n    if (socket.current) {\r\n      socket.current.emit(event, data);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    socket: socket.current,\r\n    joinProjectRoom,\r\n    leaveProjectRoom,\r\n    emitTaskUpdate,\r\n    emitProjectUpdate,\r\n    emitNewComment,\r\n    on,\r\n    off,\r\n    emit,\r\n    isConnected: socket.current?.connected || false,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use socket context\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}