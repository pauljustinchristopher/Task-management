{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulj\\\\Desktop\\\\SIWES\\\\defence project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { authAPI } from '../services/apiServices';\nimport { toast } from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true\n};\n\n// Action types\nconst ActionTypes = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAIL: 'LOGIN_FAIL',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER: 'LOAD_USER',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_LOADING: 'SET_LOADING'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.LOGIN_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case ActionTypes.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case ActionTypes.LOGIN_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case ActionTypes.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case ActionTypes.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case ActionTypes.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const queryClient = useQueryClient();\n\n  // Load user on mount if token exists\n  const {\n    data: userData,\n    isLoading\n  } = useQuery('currentUser', () => authAPI.getProfile(), {\n    enabled: !!state.token,\n    retry: false,\n    onSuccess: data => {\n      dispatch({\n        type: ActionTypes.LOAD_USER,\n        payload: data.data\n      });\n    },\n    onError: () => {\n      dispatch({\n        type: ActionTypes.LOGIN_FAIL\n      });\n    }\n  });\n\n  // Set loading based on query state\n  useEffect(() => {\n    if (!state.token) {\n      dispatch({\n        type: ActionTypes.SET_LOADING,\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: ActionTypes.SET_LOADING,\n        payload: isLoading\n      });\n    }\n  }, [isLoading, state.token]);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: ActionTypes.LOGIN_START\n      });\n      const response = await authAPI.login(credentials);\n      const {\n        token,\n        data: user\n      } = response.data;\n      dispatch({\n        type: ActionTypes.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n\n      // Invalidate and refetch user data\n      queryClient.invalidateQueries('currentUser');\n      toast.success('Welcome back!');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: ActionTypes.LOGIN_FAIL\n      });\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: ActionTypes.LOGIN_START\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        data: user\n      } = response.data;\n      dispatch({\n        type: ActionTypes.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success('Account created successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: ActionTypes.LOGIN_FAIL\n      });\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: ActionTypes.LOGOUT\n      });\n      queryClient.clear();\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await authAPI.updateProfile(userData);\n      dispatch({\n        type: ActionTypes.UPDATE_USER,\n        payload: response.data.data\n      });\n      queryClient.invalidateQueries('currentUser');\n      toast.success('Profile updated successfully');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Update failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Update password\n  const updatePassword = async passwordData => {\n    try {\n      const response = await authAPI.updatePassword(passwordData);\n      toast.success('Password updated successfully');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password update failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      const response = await authAPI.forgotPassword(email);\n      toast.success('Password reset instructions sent to your email');\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Request failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      const response = await authAPI.resetPassword(token, password);\n      toast.success('Password reset successfully');\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Password reset failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    forgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"zoq/PWHq5o21eQ/RChawD9Zfoj0=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useQuery","useQueryClient","authAPI","toast","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","loading","ActionTypes","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","LOAD_USER","UPDATE_USER","SET_LOADING","authReducer","state","action","type","setItem","payload","removeItem","AuthContext","AuthProvider","children","_s","dispatch","queryClient","data","userData","isLoading","getProfile","enabled","retry","onSuccess","onError","login","credentials","response","invalidateQueries","success","error","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","console","clear","updateProfile","_error$response3","_error$response3$data","updatePassword","passwordData","_error$response4","_error$response4$data","forgotPassword","email","_error$response5","_error$response5$data","resetPassword","password","_error$response6","_error$response6$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/paulj/Desktop/SIWES/defence project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useQuery, useQueryClient } from 'react-query';\r\nimport { authAPI } from '../services/apiServices';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n};\r\n\r\n// Action types\r\nconst ActionTypes = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAIL: 'LOGIN_FAIL',\r\n  LOGOUT: 'LOGOUT',\r\n  LOAD_USER: 'LOAD_USER',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_LOADING: 'SET_LOADING',\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ActionTypes.LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.LOGIN_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    case ActionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  const queryClient = useQueryClient();\r\n\r\n  // Load user on mount if token exists\r\n  const { data: userData, isLoading } = useQuery(\r\n    'currentUser',\r\n    () => authAPI.getProfile(),\r\n    {\r\n      enabled: !!state.token,\r\n      retry: false,\r\n      onSuccess: (data) => {\r\n        dispatch({\r\n          type: ActionTypes.LOAD_USER,\r\n          payload: data.data,\r\n        });\r\n      },\r\n      onError: () => {\r\n        dispatch({ type: ActionTypes.LOGIN_FAIL });\r\n      },\r\n    }\r\n  );\r\n\r\n  // Set loading based on query state\r\n  useEffect(() => {\r\n    if (!state.token) {\r\n      dispatch({ type: ActionTypes.SET_LOADING, payload: false });\r\n    } else {\r\n      dispatch({ type: ActionTypes.SET_LOADING, payload: isLoading });\r\n    }\r\n  }, [isLoading, state.token]);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: ActionTypes.LOGIN_START });\r\n      \r\n      const response = await authAPI.login(credentials);\r\n      const { token, data: user } = response.data;\r\n\r\n      dispatch({\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        payload: { token, user },\r\n      });\r\n\r\n      // Invalidate and refetch user data\r\n      queryClient.invalidateQueries('currentUser');\r\n      \r\n      toast.success('Welcome back!');\r\n      return response.data;\r\n    } catch (error) {\r\n      dispatch({ type: ActionTypes.LOGIN_FAIL });\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: ActionTypes.LOGIN_START });\r\n      \r\n      const response = await authAPI.register(userData);\r\n      const { token, data: user } = response.data;\r\n\r\n      dispatch({\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        payload: { token, user },\r\n      });\r\n\r\n      toast.success('Account created successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      dispatch({ type: ActionTypes.LOGIN_FAIL });\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: ActionTypes.LOGOUT });\r\n      queryClient.clear();\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(userData);\r\n      \r\n      dispatch({\r\n        type: ActionTypes.UPDATE_USER,\r\n        payload: response.data.data,\r\n      });\r\n\r\n      queryClient.invalidateQueries('currentUser');\r\n      toast.success('Profile updated successfully');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Update failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update password\r\n  const updatePassword = async (passwordData) => {\r\n    try {\r\n      const response = await authAPI.updatePassword(passwordData);\r\n      toast.success('Password updated successfully');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password update failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const response = await authAPI.forgotPassword(email);\r\n      toast.success('Password reset instructions sent to your email');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Request failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      const response = await authAPI.resetPassword(token, password);\r\n      toast.success('Password reset successfully');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    updatePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}